<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.notfound.crm.sys.mapper.EmployeeMapper">
  <resultMap id="BaseResultMap" type="com.notfound.crm.sys.vo.EmployeeVO">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="age" jdbcType="INTEGER" property="age" />
    <result column="dept" jdbcType="BIGINT" property="dept" />
    <result column="hireDate" jdbcType="TIMESTAMP" property="hiredate" />
    <result column="state" jdbcType="INTEGER" property="state" />
    <result column="admin" jdbcType="INTEGER" property="admin" />
    <result column="role" jdbcType="BIGINT" property="role" />
  </resultMap>
  <sql id="Base_Column_List">
    id, `name`, `password`, email, age, dept, hireDate, `state`, `admin`, `role`
  </sql>

  <!--根据id查询-->
  <select id="selectOne" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from employee
    where id = #{id,jdbcType=INTEGER}
  </select>

  <!--分页以及模糊查询-->
  <select id="selectList" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from employee
  </select>

  <!--登录-->
  <select id="login" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from employee
    where name = #{name}
  </select>

  <!--根据id删除数据-->
  <delete id="delete" parameterType="java.lang.Integer">
    delete from employee
    where id = #{id}
  </delete>

  <!--批量插入-->
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.notfound.crm.sys.domain.Employee" useGeneratedKeys="true">
    insert into employee (`name`, `password`, email,
      age, dept, hireDate, 
      `state`, `admin`, `role`)
    values (#{name}, #{password}, #{email},
      #{age}, #{dept}, #{hiredate},
      #{state}, #{admin}, #{role})
  </insert>

  <!--选择插入-->
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.notfound.crm.sys.domain.Employee" useGeneratedKeys="true">
    insert into employee
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="name != null">
        `name`,
      </if>
      <if test="password != null">
        `password`,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="age != null">
        age,
      </if>
      <if test="dept != null">
        dept,
      </if>
      <if test="hiredate != null">
        hireDate,
      </if>
      <if test="state != null">
        `state`,
      </if>
      <if test="admin != null">
        `admin`,
      </if>
      <if test="role != null">
        `role`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="name != null">
        #{name},
      </if>
      <if test="password != null">
        #{password},
      </if>
      <if test="email != null">
        #{email},
      </if>
      <if test="age != null">
        #{age},
      </if>
      <if test="dept != null">
        #{dept},
      </if>
      <if test="hiredate != null">
        #{hiredate},
      </if>
      <if test="state != null">
        #{state},
      </if>
      <if test="admin != null">
        #{admin},
      </if>
      <if test="role != null">
        #{role},
      </if>
    </trim>
  </insert>

  <update id="updateByPrimaryKeySelective" parameterType="com.notfound.crm.sys.domain.Employee">
    update employee
    <set>
      <if test="name != null">
        `name` = #{name},
      </if>
      <if test="password != null">
        `password` = #{password},
      </if>
      <if test="email != null">
        email = #{email},
      </if>
      <if test="age != null">
        age = #{age},
      </if>
      <if test="dept != null">
        dept = #{dept},
      </if>
      <if test="hiredate != null">
        hireDate = #{hiredate},
      </if>
      <if test="state != null">
        `state` = #{state},
      </if>
      <if test="admin != null">
        `admin` = #{admin},
      </if>
      <if test="role != null">
        `role` = #{role},
      </if>
    </set>
    where id = #{id}
  </update>
  <update id="update" parameterType="com.notfound.crm.sys.domain.Employee">
    update employee
    set `name` = #{name},
      `password` = #{password},
      email = #{email},
      age = #{age},
      dept = #{dept},
      hireDate = #{hiredate},
      `state` = #{state},
      `admin` = #{admin},
      `role` = #{role}
    where id = #{id}
  </update>
</mapper>